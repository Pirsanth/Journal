{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "temp/loginPage/validationFunctions.js",
    "temp/loginPage/main.js",
    "temp/loginPage/buttonControls.js",
    "temp/loginPage/form.js"
  ],
  "names": [
    "r",
    "e",
    "n",
    "t",
    "o",
    "i",
    "f",
    "c",
    "require",
    "u",
    "a",
    "Error",
    "code",
    "p",
    "exports",
    "call",
    "length",
    "1",
    "module",
    "window",
    "App",
    "checkUsernameURL",
    "buttonControls",
    "form",
    "_window$App$Validatio",
    "validatePassword",
    "validateRepeatPassword",
    "sendGETWithProspectiveUsername",
    "loginModeButton",
    "document",
    "querySelector",
    "registerModeButton",
    "startButton",
    "modeBar",
    "ButtonControls",
    "prototype",
    "addRegisterButtonHandler",
    "fn",
    "addEventListener",
    "event",
    "classList",
    "add",
    "addLoginButtonHandler",
    "remove",
    "addStartButtonHandler",
    "offsetHiddenElement",
    "forms",
    "passwordElement",
    "repeatPasswordElement",
    "usernameElement",
    "Form",
    "this",
    "infoBox",
    "formElement",
    "repeatPasswordContainer",
    "formContainer",
    "isRegistrationMode",
    "doesTheUserExist",
    "doesTheContainerHaveShowFailure",
    "element",
    "parentElement",
    "contains",
    "removeInfoBox",
    "removeChild",
    "addOffsetToHiddenInput",
    "date",
    "Date",
    "value",
    "getTimezoneOffset",
    "addPasswordOnBlurHandler",
    "addRepeatPasswordOnBlurHandler",
    "showFailureMessage",
    "message",
    "nextElementSibling",
    "lastElementChild",
    "textContent",
    "container",
    "showSuccessMessage",
    "enableRepeatPasswordField",
    "disabled",
    "disableRepeatPasswordField",
    "addUsernameOnBlurHandler",
    "showUsernameValidityMessageFromInternalState",
    "ensureCorrectUsernameValidityOnModeChange",
    "changeUsernameIsValidValidityMessage",
    "validMessageElement",
    "addSubmitEventHandler",
    "_this",
    "showRelevantValidityMessages",
    "areAllFormFieldsValid",
    "preventDefault",
    "focus",
    "blur",
    "updateRepeatPasswordValidityInCaseTheyNowDoNotMatch",
    "validity",
    "valid",
    "concat",
    "ValidationFunctions",
    "isValid",
    "username",
    "xhr",
    "XMLHttpRequest",
    "open",
    "setRequestHeader",
    "outgoingJSON",
    "onload",
    "obj",
    "JSON",
    "parse",
    "responseText",
    "error",
    "console",
    "log",
    "userExists",
    "data",
    "send",
    "stringify",
    "action",
    "_validatePassword",
    "_validateRepeatPasswo"
  ],
  "mappings": "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",
  "file": "temp.min.js",
  "sourcesContent": [
    "(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()",
    "(function (window) {\r\n    let App = (window.App)? window.App : window.App = {};\r\n\r\n    /*these would be UTLs because they would include the protocol and thus describe HOW to\r\n    get the resource as well as its location */\r\n    const baseURL = \"baseURL\";\r\n    //const [,baseURL] = window.location.href.match(/(^[\\w:]+\\/\\/[\\w:]+)\\//);\r\n    const checkUsernameURL = `${baseURL}/doesUserExist`\r\n\r\n     function validatePassword(passwordElement) {\r\n          if(passwordElement.validity.valid){\r\n            return {isValid: true};\r\n          }\r\n          else{\r\n            if(passwordElement.value){\r\n              return {isValid: false, message: \"Passwords have to be at least 4 characters long\"}\r\n            }\r\n            else{\r\n              return {isValid: false, message: \"Required\"}\r\n            }\r\n          }\r\n     }\r\n\r\n\r\n     function validateRepeatPassword(passwordElement, repeatPasswordElement) {\r\n       if(!repeatPasswordElement.value){\r\n         return {isValid: false, message: \"Required\"}\r\n       }\r\n       else if(!repeatPasswordElement.validity.valid){\r\n         return {isValid: false, message: \"Passwords have to be at least 4 characters long\"}\r\n       }\r\n       else if(passwordElement.value !== repeatPasswordElement.value){\r\n         return {isValid: false, message: \"Passwords do not match\"};\r\n       }\r\n       else{\r\n         return {isValid: true};\r\n       }\r\n     }\r\n    //although its AJAX it simply validates the username. Did not see the need for a seperate AJAX module\r\n     function sendGETWithProspectiveUsername(username, fn) {\r\n       let xhr = new XMLHttpRequest();\r\n       xhr.open(\"POST\", checkUsernameURL);\r\n       xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n\r\n       let outgoingJSON = {username};\r\n\r\n       xhr.onload = function () {\r\n           let obj  = JSON.parse(this.responseText);\r\n           //accessing properties on objects that do not exist does not throw an error\r\n           if(!obj.error){\r\n             const userExists = obj.data\r\n             fn(userExists);\r\n           }\r\n           else{\r\n             console.log(`${obj.error} : ${obj.message}`);\r\n           }\r\n         }\r\n\r\n       xhr.send(JSON.stringify(outgoingJSON));\r\n     }\r\n\r\n    App.ValidationFunctions = {validatePassword, validateRepeatPassword, sendGETWithProspectiveUsername}\r\n})(window);\r\n",
    "(function (window) {\r\n  \"use strict\";\r\n\r\n  const buttonControls = new window.App.ButtonControls();\r\n  const form = new window.App.Form();\r\n  const {validatePassword, validateRepeatPassword, sendGETWithProspectiveUsername} = window.App.ValidationFunctions;\r\n\r\n  buttonControls.addRegisterButtonHandler(function () {\r\n      if(form.infoBox){\r\n        form.removeInfoBox();\r\n      }\r\n      form.formElement.action = \"processRegistration\";\r\n      form.repeatPasswordContainer.classList.remove(\"hideRepeat\");\r\n      form.enableRepeatPasswordField();\r\n      form.isRegistrationMode = true;\r\n      form.changeUsernameIsValidValidityMessage();\r\n      form.ensureCorrectUsernameValidityOnModeChange();\r\n  });\r\n\r\n  buttonControls.addLoginButtonHandler(function () {\r\n      form.formElement.action = \"processLogin\";\r\n      form.repeatPasswordContainer.classList.add(\"hideRepeat\");\r\n      form.disableRepeatPasswordField();\r\n      form.isRegistrationMode = false;\r\n      form.changeUsernameIsValidValidityMessage();\r\n      form.ensureCorrectUsernameValidityOnModeChange();\r\n  });\r\n  buttonControls.addStartButtonHandler(function () {\r\n      form.formContainer.classList.add(\"expand\");\r\n  });\r\n  form.addOffsetToHiddenInput();\r\n  form.addPasswordOnBlurHandler(function (passwordElement) {\r\n    const {isValid, message} = validatePassword(passwordElement);\r\n\r\n    if(isValid){\r\n      form.showSuccessMessage(passwordElement);\r\n      form.updateRepeatPasswordValidityInCaseTheyNowDoNotMatch(function (repeatPasswordElement) {\r\n        //only runs if repeatPassword AND passwordElement is valid (not empty and >4 characters)\r\n        //we do not need to worry about password matching if they are not valid in the first place or if repeatPassword is not filled in yet\r\n\r\n        repeatPasswordElement.focus();\r\n        repeatPasswordElement.blur();\r\n      });\r\n    }\r\n    else{\r\n      form.showFailureMessage(passwordElement, message);\r\n    }\r\n  });\r\n  form.addRepeatPasswordOnBlurHandler(function (passwordElement, repeatPasswordElement) {\r\n     const {isValid, message} = validateRepeatPassword(passwordElement, repeatPasswordElement);\r\n\r\n    if(isValid){\r\n        form.showSuccessMessage(repeatPasswordElement);\r\n      }\r\n    else{\r\n        form.showFailureMessage(repeatPasswordElement, message);\r\n    }\r\n  });\r\n  form.addUsernameOnBlurHandler(function (usernameElement) {\r\n    //no need to send a GET for an empty string\r\n    if(usernameElement.value){\r\n      sendGETWithProspectiveUsername(usernameElement.value, function (userExists) {\r\n        form.doesTheUserExist = userExists;\r\n        form.showUsernameValidityMessageFromInternalState();\r\n      });\r\n    }\r\n    else{\r\n      form.showFailureMessage(usernameElement, \"Required\");\r\n    }\r\n  });\r\n  form.addSubmitEventHandler();\r\n})(window);\r\n",
    "(function (window) {\r\n  \"use strict\";\r\n\r\n  let App = (window.App)? window.App : window.App = {};\r\n\r\n  const FORM_CONTAINER = '[data-form-container]';\r\n  const START_BUTTON = '[data-start-button]';\r\n  const LOGIN_MODE_BUTTON = '[data-button-mode-login]';\r\n  const REGISTER_MODE_BUTTON = '[data-button-mode-register]';\r\n  const MODE_BAR = '[data-mode-bar]';\r\n\r\n\r\n  const formContainerElement = document.querySelector(FORM_CONTAINER);\r\n  const loginModeButton = document.querySelector(LOGIN_MODE_BUTTON);\r\n  const registerModeButton = document.querySelector(REGISTER_MODE_BUTTON);\r\n  const startButton = document.querySelector(START_BUTTON);\r\n  const modeBar = document.querySelector(MODE_BAR);\r\n\r\n  function ButtonControls() {\r\n\r\n  }\r\n\r\n  ButtonControls.prototype.addRegisterButtonHandler = function (fn) {\r\n    registerModeButton.addEventListener(\"click\", function (event) {\r\n      modeBar.classList.add(\"register\");\r\n      fn();\r\n    });\r\n  }\r\n\r\n  ButtonControls.prototype.addLoginButtonHandler = function (fn) {\r\n    loginModeButton.addEventListener(\"click\", function (event) {\r\n      modeBar.classList.remove(\"register\");\r\n      fn();\r\n    });\r\n  }\r\n  ButtonControls.prototype.addStartButtonHandler = function (fn) {\r\n    startButton.addEventListener(\"click\", function (event) {\r\n      fn();\r\n    })\r\n  }\r\n\r\n  App.ButtonControls = ButtonControls;\r\n\r\n})(window);\r\n",
    "(function (window) {\r\n  \"use strict\";\r\n  let App = (window.App)? window.App : window.App = {};\r\n\r\n/*Selectors here */\r\n  const INFO_BOX = '[data-info-box]';\r\n  const REPEAT_PASSWORD_CONTAINER = '[data-repeat-password-container]';\r\n  const FORM_CONTAINER = '[data-form-container]';\r\n\r\n\r\n  const offsetHiddenElement = document.forms[0][\"offset\"];\r\n  const passwordElement = document.forms[0][\"password\"];\r\n  const repeatPasswordElement = document.forms[0][\"repeatPassword\"];\r\n  const usernameElement = document.forms[0][\"username\"];\r\n\r\n  function Form() {\r\n    this.infoBox = document.querySelector(INFO_BOX);;\r\n    this.formElement = document.forms[0];\r\n    this.repeatPasswordContainer = document.querySelector(REPEAT_PASSWORD_CONTAINER);\r\n    this.formContainer = document.querySelector(FORM_CONTAINER);\r\n    this.isRegistrationMode = false;\r\n    this.doesTheUserExist = null;\r\n  }\r\n\r\n  Form.prototype.removeInfoBox = function () {\r\n    this.formElement.removeChild(this.infoBox);\r\n    this.infoBox = null;\r\n  }\r\n  Form.prototype.addOffsetToHiddenInput = function () {\r\n    let date = new Date();\r\n    offsetHiddenElement.value = date.getTimezoneOffset();\r\n  }\r\n  Form.prototype.addPasswordOnBlurHandler = function (fn) {\r\n    passwordElement.addEventListener(\"blur\", function (e) {\r\n      fn(passwordElement);\r\n    })\r\n  }\r\n  Form.prototype.addRepeatPasswordOnBlurHandler = function (fn) {\r\n    repeatPasswordElement.addEventListener(\"blur\", function (e) {\r\n      fn(passwordElement, repeatPasswordElement);\r\n    })\r\n  }\r\n  Form.prototype.showFailureMessage = function (element, message) {\r\n     const errorMessageElement = element.nextElementSibling.nextElementSibling.lastElementChild;\r\n     errorMessageElement.textContent = message;\r\n     const container = element.parentElement.parentElement;\r\n     container.classList.remove(\"showSuccess\");\r\n     container.classList.add(\"showFailure\");\r\n  }\r\n  Form.prototype.showSuccessMessage = function (element) {\r\n    const container = element.parentElement.parentElement;\r\n    container.classList.remove(\"showFailure\");\r\n    container.classList.add(\"showSuccess\");\r\n  }\r\n  Form.prototype.enableRepeatPasswordField = function () {\r\n    repeatPasswordElement.disabled = false;\r\n  }\r\n  Form.prototype.disableRepeatPasswordField = function () {\r\n    repeatPasswordElement.disabled = true;\r\n  }\r\n  //would be messy to use EventTarget.removeEventListener() as I could not use an anonymous function\r\n  Form.prototype.addUsernameOnBlurHandler = function (fn) {\r\n    usernameElement.addEventListener(\"blur\", () => {\r\n        fn(usernameElement);\r\n    });\r\n  }\r\n  Form.prototype.showUsernameValidityMessageFromInternalState = function () {\r\n    if(this.isRegistrationMode){\r\n      //if you are registering and user exists, it is a failure\r\n      if(!this.doesTheUserExist){\r\n        this.showSuccessMessage(usernameElement);\r\n      }\r\n      else{\r\n        this.showFailureMessage(usernameElement, \"Username taken please try another\");\r\n      }\r\n    }\r\n    else{\r\n      //this means he is logging in and the user exists (if the username is not taken it is valid)\r\n      if(this.doesTheUserExist){\r\n        this.showSuccessMessage(usernameElement);\r\n      }\r\n      else{\r\n        this.showFailureMessage(usernameElement, \"User does not exist\");\r\n      }\r\n    }\r\n  }\r\n  Form.prototype.ensureCorrectUsernameValidityOnModeChange = function () {\r\n    //has the user interacted with the form significantly? (empty string on blue does not count)\r\n    if(this.doesTheUserExist !== null){\r\n      this.showUsernameValidityMessageFromInternalState();\r\n    }\r\n  }\r\n  Form.prototype.changeUsernameIsValidValidityMessage = function () {\r\n    const validMessageElement = usernameElement.nextElementSibling.lastElementChild;\r\n\r\n    if(this.isRegistrationMode){\r\n      validMessageElement.textContent = \"Username is available\"\r\n    }\r\n    else{\r\n      validMessageElement.textContent = \"Username is valid\"\r\n    }\r\n  }\r\n  Form.prototype.addSubmitEventHandler = function () {\r\n    this.formElement.addEventListener(\"submit\", (e) => {;\r\n      this.showRelevantValidityMessages();\r\n\r\n      if(!this.areAllFormFieldsValid()){\r\n        e.preventDefault();\r\n      }\r\n    })\r\n  }\r\n  //no point reinventing the wheel so I choose to reuse the onblur handlers\r\n  Form.prototype.showRelevantValidityMessages = function () {\r\n    usernameElement.focus();\r\n    usernameElement.blur();\r\n\r\n    passwordElement.focus();\r\n    passwordElement.blur();\r\n\r\n    if(this.isRegistrationMode){\r\n      repeatPasswordElement.focus();\r\n      repeatPasswordElement.blur();\r\n    }\r\n  }\r\n  //I feel like the validation functions I wrote check the DOM more than the simple contains method would. SInce the DOM is slow, chose to use ClassList.contains()\r\nForm.prototype.areAllFormFieldsValid = function () {\r\n  if(doesTheContainerHaveShowFailure(usernameElement)){\r\n    return false;\r\n  }\r\n  else if(doesTheContainerHaveShowFailure(passwordElement)){\r\n    return false;\r\n  }\r\n  else if(this.isRegistrationMode){\r\n    if(doesTheContainerHaveShowFailure(repeatPasswordElement)){\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  }\r\n  else{\r\n    return true;\r\n  }\r\n}\r\n//we do not need the this binding inside the function, so there is no need to attach it to the prototype object\r\nfunction doesTheContainerHaveShowFailure(element) {\r\n    return element.parentElement.parentElement.classList.contains(\"showFailure\")\r\n}\r\nForm.prototype.updateRepeatPasswordValidityInCaseTheyNowDoNotMatch = function (fn) {\r\n    if(repeatPasswordElement.validity.valid){\r\n      fn(repeatPasswordElement);\r\n    }\r\n}\r\n\r\n  App.Form = Form;\r\n\r\n})(window);\r\n"
  ],
  "sourceRoot": ""
}